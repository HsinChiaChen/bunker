<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-1-g15f4949  Build Version: 1.6.7594.29634
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot  name="bunker_description" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:arg name="imu_visual"   default="false"/>
  <xacro:arg name="laser_visual" default="true"/>
  
  <xacro:include filename="$(find gazebo_terrain)/urdf/d435.urdf.xacro" />
  <xacro:sensor_d435 name="camera" topics_ns="camera" parent="base_camera" publish_pointcloud="true">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:sensor_d435>  
 
  
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
  </gazebo>

  
   <gazebo>
    <plugin name="mecanum_ros_force_based_move" filename="libnrsl_mecanum_ros_force_based_move.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>50.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <cmdVelTimeOut>50.0</cmdVelTimeOut>
      <publishOdometryTf>1</publishOdometryTf>
      <yaw_velocity_p_gain>100.0</yaw_velocity_p_gain>
      <x_velocity_p_gain>2000.0</x_velocity_p_gain>
      <y_velocity_p_gain>2000.0</y_velocity_p_gain>
      <max_x_velocity>1.5</max_x_velocity>
      <max_y_velocity>1.5</max_y_velocity>
      <max_yaw_velocity>1.0</max_yaw_velocity>
    </plugin>
  </gazebo>
  
  
   <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>base_imu</bodyName>
      <frameName>base_imu</frameName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>0</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>
  
  <gazebo reference="base_scan">
    <sensor type="gpu_ray" name="sick_tim_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>$(arg laser_visual)</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <!-- <samples>818.181818181818</samples> -->
            <samples>270</samples>
            <resolution>1</resolution>
            <min_angle>-1.57</min_angle>
            <max_angle> 1.57</max_angle>
          </horizontal>
          <!-- <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-15*3.1415926535897931/180</min_angle>
            <max_angle> 15*3.1415926535897931/180</max_angle>
          </vertical>  -->
        </scan>
        <range>
          <min>0.9</min>
          <max>25</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_sick_tim_controller" filename="libgazebo_ros_gpu_laser.so">
      <!-- <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_gpu_laser.so"> -->
        <!-- <topicName>/velodyne_points</topicName> -->
        <topicName>/scan</topicName> 
        <frameName>base_scan</frameName>
        <!-- <min_range>0.9</min_range>
        <max_range>25</max_range> -->
      </plugin>
    </sensor>
  </gazebo>
</robot>
